<?php
/**
 * Represents the result of a {data format} -> block markup conversion.
 */
class WP_Blocks_With_Metadata {

	private $block_markup;
	private $metadata;

	public function __construct( $block_markup, $metadata = array() ) {
		$this->block_markup = $block_markup;
		$this->metadata     = $metadata;
	}

	/**
	 * Gets the first metadata value for a given key.
	 *
	 * Example:
	 *
	 * Metadata:
	 * array(
	 *     'post_title' => array( 'The Name of the Wind' ),
	 *     'post_author' => array( 'Patrick Rothfuss', 'Betsy Wollheim' )
	 * )
	 *
	 * get_first_meta_value( 'post_author' ) returns 'Patrick Rothfuss'.
	 *
	 * @param string $key The metadata key.
	 * @return mixed The metadata value.
	 */
	public function get_first_meta_value( $key ) {
		if ( ! array_key_exists( $key, $this->metadata ) ) {
			return null;
		}
		return $this->metadata[ $key ][0];
	}

	/**
	 * Gets all the metadata sourced from the input document by the convert() method.
	 * The data format is:
	 *
	 * array(
	 *     'post_title' => array( 'The Name of the Wind' ),
	 *     'post_author' => array( 'Patrick Rothfuss', 'Betsy Wollheim' )
	 * )
	 *
	 * Note each meta key may have multiple values. The consumer of this interface
	 * must account for this.
	 *
	 * @return array The metadata sourced from the input document.
	 */
	public function get_all_metadata() {
		return $this->metadata;
	}

	/**
	 * Gets the block markup generated by the convert() method.
	 *
	 * @return string The block markup.
	 */
	public function get_block_markup() {
		return $this->block_markup;
	}
}
